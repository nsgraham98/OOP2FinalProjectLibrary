@page "/inventory"
@using OOP2FinalProjectLibrary
@using OOP2FinalProjectLibrary.Data
@using OOP2FinalProjectLibrary.Data.Managers
@using OOP2FinalProjectLibrary.Data.Objects
@using OOP2FinalProjectLibrary.Data.Objects.Items
@inject NavigationManager navManager

<h3 class="heading">Inventory Manager</h3>
<section class="grid">
    <div class="box">
        <h3>Search Inventory</h3>
        <p>Search by:</p>

        <label for="title">Title</label><br />
        <input type="text" placeholder="Search by Title" @bind="titleField">
        <label for="availability">Availability</label><br />
        <select @onchange="e => OnSStatusChanged(e)">
            <option value="" disabled selected>Select Availability</option>
            <option value="available">Available</option>
            <option value="rented">Rented</option>
        </select>
        <label for="category">Category</label>
        <select @onchange="e => OnSCategoryChanged(e)">
            <option value="" disabled selected>Select Category</option>
            <option value="Audiobook">Audiobook</option>
            <option value="Book">Book</option>
            <option value="Cd">CD</option>
            <option value="Dvd">DVD</option>
            <option value="Magazine">Magazine</option>
        </select>
        <label for="location">Location</label>
        <select @onchange="e => OnSLocationChanged(e)">
            <option value="" disabled selected>Select Location</option>
            <option value="City Center">City Center</option>
            <option value="Lakeside">Lakeside</option>
            <option value="East Village">East Village</option>
            <option value="North Hill">North Hill</option>
        </select>
        <br /><br />
        <button @onclick="SearchItems">Search</button>

        <select @onchange="PopulateItemFields">
            @if (foundList.Any())
            {
                <option disabled selected="selected">Select Item</option>
                @foreach (Item item in foundList)
                {
                    <option value="@item.ItemId">@item.ItemId : @item.Title</option>
                }
            }
            else
            {
                <option disabled>No Items Found</option>
            }
        </select>
    </div>
    <div class="box">

        <h3>Item Information</h3>
            <label for="id">ID</label>
            <input type="text" @bind="itemId" readonly />
        <br />
            <label for="title">Title</label>
            <input type="text" @bind="title" readonly />
        <br />
            <label for="category">Category</label>
        <input type="text" @bind="category" readonly />
        <br />
            <label for="publisher">Publisher</label>
        <input type="text" @bind="publisher" readonly />
        <br />
            <label for="genre">Genre</label>
        <input type="text" @bind="genre" readonly />
        <br />
            <label for="location">Location</label>
        <input type="text" @bind="location" readonly />
        <br/>
            <label for="status">Availability</label>
        <input type="text" @bind="status" readonly />
        <br />
            <label for="replacecost">Replacement Cost</label>
        <input type="text" @bind="replaceCost" readonly />
        <br />
            <label for="pubdate">Date Published</label>
        <input type="text" @bind="pubDate" readonly />
        <br />
        @if (audiobookFields)
        {
            <label for="isbn">ISBN (Format: 999-99-99999-99-9)</label>
            <input type="text" @bind="isbn" readonly />
            <br />
            <label for="author">Author</label>
            <input type="text" @bind="author" readonly/>
            <br />
            <label for="duration">Duration</label>
            <input type="text" @bind="duration" readonly />
            <br />
            <label for="narrator">Narrator</label>
            <input type="text" @bind="narrator" readonly />
            <br />
        }
        @if (bookFields)
        {
            <label for="isbn">ISBN (Format: 999-99-99999-99-9)</label>
            <input type="text" @bind="isbn" readonly />
            <br />
            <label for="author">Author</label>
            <input type="text" @bind="author" readonly />
            <br />
            <label for="format">Format</label>
            <input type="text" @bind="format" readonly />
            <br />
        }
        @if (cdFields)
        {
            <label for="artist">Artist</label>
            <input type="text" @bind="artist" readonly />
            <br />
            <label for="label">Label</label>
            <input type="text" @bind="label" readonly />
            <br />
            <label for="duration">Duration</label>
            <input type="text" @bind="duration" readonly />
            <br />
        }
        @if (dvdFields)
        {
            <label for="directior">Director</label>
            <input type="text" @bind="director" readonly />
            <br />
            <label for="duration">Duration</label>
            <input type="text" @bind="duration" readonly />
            <br />
            <label for="format">Format</label>
            <input type="text" @bind="format" readonly />
            <br />
        }
        @if (magazineFields)
        {
            <label for="publication">Publication</label>
            <input type="text" @bind="publication" readonly />
            <br />
            <label for="issn">ISSN (Format: 9999-9999)</label>
            <input type="text" @bind="issn" readonly />
            <br />
            <label for="coverdate">Cover Date</label>
            <input type="date" @bind="coverDate" readonly />
            <br />
        }
        <button type="submit" @onclick="DeleteItem">Delete Item</button>
        <button type="reset" @onclick="ClearDisplayedFields">Clear</button>
        <button @onclick="ShowEditItemPopUp">Edit Item</button>
        <button @onclick="ShowAddItemPopUp">Add New Item</button>
    </div>
    <div>
        @if (isEditItemVisible)
        {
            <div class="popup">
                <div class="popup-content">
                    <label for="itemId">ID</label>
                    <input type="text" @bind="itemId" readonly/>
                    <br />
                    <label for="title">Title</label>
                    <input type="text" @bind="editTitle" />
                    <br />
                    <label for="category">Category</label>
                    <input type="text" @bind="editCat" readonly/>
                    <br />
                    <label for="publisher">Publisher</label>
                    <input type="text" @bind="editPub" />
                    <br />
                    <label for="genre">Genre</label>
                    <input type="text" @bind="editGenre" />
                    <br />
                    <label for="location">Location</label>
                    <select @onchange="e => OnEditLocationChanged(e)">
                        <option value="North Hill">North Hill</option>
                        <option value="City Center">City Center</option>
                        <option value="East Village">East Village</option>
                        <option value="Lakeside">Lakeside</option>
                    </select>
                    <label for="status">Availability</label>
                    <select @onchange="e => OnEditStatusChanged(e)">
                        <option value="available">Available</option>
                        <option value="rented">Rented</option>
                    </select>
                    <br />
                    <label for="replacecost">Replacement Cost</label>
                    <input type="text" @bind="editReplaceCost" />
                    <br />
                    <label for="pubdate">Date Published</label>
                    <input type="text" @bind="editPubDate" />
                    <br />

                    @if (editAudiobookFields)
                    {
                        <label for="isbn">ISBN (Format: 999-99-99999-99-9)</label>
                        <input type="text" @bind="editIsbn" />
                        <br />
                        <label for="author">Author</label>
                        <input type="text" @bind="editAuthor" />
                        <br />
                        <label for="duration">Duration</label>
                        <input type="text" @bind="editDuration" />
                        <br />
                        <label for="narrator">Narrator</label>
                        <input type="text" @bind="editNarrator" />
                        <br />
                    }
                    @if (editBookFields)
                    {
                        <label for="isbn">ISBN (Format: 999-99-99999-99-9)</label>
                        <input type="text" @bind="editIsbn" />
                        <br />
                        <label for="author">Author</label>
                        <input type="text" @bind="editAuthor" />
                        <br />
                        <label for="format">Format</label>
                        <select @onchange="e => OnEditFormatChanged(e)">
                            <option value="softcover">Softcover</option>
                            <option value="hardcover">Hardcover</option>
                            <option value="ebook">EBook</option>
                        </select>
                        <br />
                    }
                    @if (editCdFields)
                    {
                        <label for="artist">Artist</label>
                        <input type="text" @bind="editArtist" />
                        <br />
                        <label for="label">Label</label>
                        <input type="text" @bind="editLabel" />
                        <br />
                        <label for="duration">Duration</label>
                        <input type="text" @bind="editDuration" />
                        <br />
                    }
                    @if (editDvdFields)
                    {
                        <label for="directior">Director</label>
                        <input type="text" @bind="editDirector" />
                        <br />
                        <label for="duration">Duration</label>
                        <input type="text" @bind="editDuration" />
                        <br />
                        <label for="format">Format</label>
                        <select @onchange="e => OnEditFormatChanged(e)">
                            <option value="dvd">DVD</option>
                            <option value="blu-ray">Blu-Ray</option>
                        </select>
                        <br />
                    }
                    @if (editMagazineFields)
                    {
                        <label for="publication">Publication</label>
                        <input type="text" @bind="editPublication" />
                        <br />
                        <label for="issn">ISSN (Format: 9999-9999)</label>
                        <input type="text" @bind="editLabel" />
                        <br />
                        <label for="coverdate">Cover Date</label>
                        <input type="date" @bind="editCoverDate" />
                        <br />
                    }
                    <button class="close" @onclick="CloseEditItemPopUp">Close</button>
                    <button class="edit" @onclick="EditItemInfo">Save Item</button>
                    <p></p>
                </div>
            </div>
        }

    </div>
    <div>
        @if (isAddItemVisible)
        {
            <div class="popup">
                <div class="popup-content">

                        <label for="title">Title</label>
                        <input type="text" @bind="addTitle" />
                    <br />
                    <label for="category">Category</label>
                        <select @onchange="e => OnAddCategoryChanged(e)">
                            <option disabled selected="selected">Select Category</option>
                            <option value="Audiobook">Audiobook</option>
                            <option value="Book">Book</option>
                            <option value="Cd">CD</option>
                            <option value="Dvd">DVD</option>
                            <option value="Magazine">Magazine</option>
                        </select>
                    <br />
                        <label for="publisher">Publisher</label>
                        <input type="text" @bind="addPub" />
                    <br />
                        <label for="genre">Genre</label>
                        <input type="text" @bind="addGenre" />
                    <br />
                        <label for="location">Location</label>
                        <select @onchange="e => OnAddLocationChanged(e)">
                            <option disabled selected="selected">Select Location</option>
                            <option value="North Hill">Audiobook</option>
                            <option value="City Center">Book</option>
                            <option value="East Village">CD</option>
                            <option value="Lakeside">DVD</option>
                        </select>
                    <br />
                        <label for="replacecost">Replacement Cost</label>
                        <input type="text" @bind="addReplaceCost" />
                    <br />
                        <label for="pubdate">Date Published</label>
                        <input type="text" @bind="addPubDate" />
                    <br />

                    @if (addAudiobookFields)
                    {
                        <label for="isbn">ISBN (Format: 999-99-99999-99-9)</label>
                        <input type="text" @bind="addIsbn" />
                        <br />
                        <label for="author">Author</label>
                        <input type="text" @bind="addAuthor" />
                        <br />
                        <label for="duration">Duration</label>
                        <input type="text" @bind="addDuration" />
                        <br />
                        <label for="narrator">Narrator</label>
                        <input type="text" @bind="addNarrator" />
                        <br />
                    }
                    @if (addBookFields)
                    {
                            <label for="isbn">ISBN (Format: 999-99-99999-99-9)</label>
                            <input type="text" @bind="addIsbn" />
                        <br />
                            <label for="author">Author</label>
                            <input type="text" @bind="addAuthor" />
                        <br />
                            <label for="format">Format</label>
                            <select @onchange="e => OnAddFormatChanged(e)">
                                <option value="softcover">Softcover</option>
                                <option value="hardcover">Hardcover</option>
                                <option value="ebook">EBook</option>
                            </select> 
                        <br />
                    }
                    @if (addCdFields)
                    {
                            <label for="artist">Artist</label>
                            <input type="text" @bind="addArtist" />
                        <br />
                            <label for="label">Label</label>
                            <input type="text" @bind="addLabel" />
                        <br />
                            <label for="duration">Duration</label>
                            <input type="text" @bind="addDuration" />
                        <br />
                    }
                    @if (addDvdFields)
                    {
                            <label for="directior">Director</label>
                            <input type="text" @bind="addDirector" />
                        <br />
                            <label for="duration">Duration</label>
                            <input type="text" @bind="addDuration" />
                        <br />
                            <label for="format">Format</label>
                            <select @onchange="e => OnAddFormatChanged(e)">
                                <option value="dvd">DVD</option>
                                <option value="blu-ray">Blu-Ray</option>
                            </select>
                        <br />
                    }
                    @if (addMagazineFields)
                    {
                            <label for="publication">Publication</label>
                            <input type="text" @bind="addPublication" />
                        <br />
                            <label for="issn">ISSN (Format: 9999-9999)</label>
                            <input type="text" @bind="addLabel" />
                        <br />
                            <label for="coverdate">Cover Date</label>
                            <input type="date" @bind="addCoverDate"/>
                        <br />
                    }
                    <button class="close" @onclick="CloseAddItemPopUp">Close</button>
                    <button class="add" @onclick="AddItem">Add Item</button>
                    <p></p>
                </div>
            </div>
        }

    </div>
    @if (alert)
    {
        <div class="popup">
            <div class="popup-content">
                <p>@message</p>
                <button @onclick="CloseAlertBox">OK</button>
            </div>           
        </div>
    }
</section>

<style>
    .popup {
        display: flex;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
    }

    .popup-content {
        background-color: #fff;
        padding: 20px;
        border-radius: 5px;
        text-align: center;
        width: 300px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

/*     .close {
        position: absolute;
        top: 10px;
        right: 20px;
        cursor: pointer;
        font-size: 20px;
    } */

    .alert-box {
        display: flex;
        flex-direction: column;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
        z-index: 9999; 
        width: 300px;
        text-align: center;
    }

    .alert-box p {
        margin: 10px 0;
        font-size: 16px;
    }

    .alert-box button {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
    }

    .alert-box button:hover {
        background-color: #0056b3;
    }
</style>
@code {

    /* ==============================================================================
 * search criteria selectors */
    private string titleField = "";
    private string catField = "";
    private string locationField = "";
    private string statusField = "";

    /* ==============================================================================
     * DISPLAYED INFO */
    private int itemId = 0;
    private string title = "";
    private string category = "";
    private string publisher = "";
    private string genre = "";
    private string location = "";
    private string status = "";
    private float replaceCost = 0;
    private DateTime pubDate = DateTime.MinValue;
    // displayed item child info fields
    private string isbn = "";
    private string author = "";
    private string auration = "";
    private string narrator = "";
    private string format = "";
    private string artist = "";
    private string label = "";
    private string director = "";
    private string publication = "";
    private string issn = "";
    private string duration = "";
    private DateTime coverDate = DateTime.MinValue;
    // displayed child field bools
    private bool audiobookFields = false;
    private bool bookFields = false;
    private bool cdFields = false;
    private bool dvdFields = false;
    private bool magazineFields = false;

    /* ==============================================================================
     * EDIT */
    // private int editId = 0;
    private string editTitle = "";
    private string editCat = "";
    private string editPub = "";
    private string editGenre = "";
    private string editLocation = "";
    private string editStatus = "";
    private float editReplaceCost = 0;
    private DateTime editPubDate = DateTime.MinValue;
    // edit item child fields
    private string editIsbn = "";
    private string editAuthor = "";
    private string editDuration = "";
    private string editNarrator = "";
    private string editFormat = "";
    private string editArtist = "";
    private string editLabel = "";
    private string editDirector = "";
    private string editPublication = "";
    private string editIssn = "";
    private DateTime editCoverDate = DateTime.MinValue;
    // category dropdown in edit item
    private bool isEditItemVisible = false;
    private bool editAudiobookFields = false;
    private bool editBookFields = false;
    private bool editCdFields = false;
    private bool editDvdFields = false;
    private bool editMagazineFields = false;

    /* ==============================================================================
     * ADD */
    // add item fields
    private string addTitle = "";
    private string addCategory = "";
    private string addPub = "";
    private string addGenre = "";
    private string addLocation = "";
    private float addReplaceCost = 0;
    private DateTime addPubDate = DateTime.MinValue;
    // add item child fields
    private string addIsbn = "";
    private string addAuthor = "";
    private string addDuration = "";
    private string addNarrator = "";
    private string addFormat = "";
    private string addArtist = "";
    private string addLabel = "";
    private string addDirector = "";
    private string addPublication = ""; 
    private string addIssn = "";
    private DateTime addCoverDate = DateTime.MinValue;
    // category dropdown in add item
    private bool isAddItemVisible = false;
    private bool addAudiobookFields = false;
    private bool addBookFields = false;
    private bool addCdFields = false;
    private bool addDvdFields = false;
    private bool addMagazineFields = false;

    /* ==============================================================================
     * MISC */
    private bool alert = false;
    string message = "";

    // List of found items
    private List<Item> foundList = new List<Item>();

    /* ==============================================================================
     *                          FUNCTIONS */

    /* ==============================================================================
     * SEARCH */
    private void SearchItems()
    {
        bool isTitle = false;
        bool isCategory = false;
        bool isLocation = false;
        bool isStatus = false;

        DBHandler db = new DBHandler();
        if (!String.IsNullOrEmpty(catField))
        {
            isCategory = true;
        }
        if (!String.IsNullOrEmpty(titleField))
        {
            isTitle = true;
        }
        if (!String.IsNullOrEmpty(statusField))
        {
            isStatus = true;
        }
        if (!String.IsNullOrEmpty(locationField))
        {
            isLocation = true;
        }

        foundList = db.SearchItemsDB(titleField, catField, statusField, locationField, isTitle, isCategory, isStatus, isLocation);
        StateHasChanged();
    }

    private void OnSCategoryChanged(ChangeEventArgs e)
    {
        catField = e.Value?.ToString();
    }
    private void OnSStatusChanged(ChangeEventArgs e)
    {
        statusField = e.Value?.ToString();
    }
    private void OnSLocationChanged(ChangeEventArgs e)
    {
        locationField = e.Value?.ToString();
    }

    /* ==============================================================================
     * DISPLAYED FIELDS */
    private void PopulateItemFields(ChangeEventArgs e)
    {
        audiobookFields = false;
        bookFields = false;
        cdFields = false;
        dvdFields = false;
        magazineFields = false;

        if (int.TryParse(e.Value.ToString(), out int selectedItemId))
        {
            Item selectedItem = foundList.FirstOrDefault(i => i.ItemId == selectedItemId);
            if (selectedItem != null)
            {
                itemId = selectedItem.ItemId;
                title = selectedItem.Title;
                category = selectedItem.Category;
                publisher = selectedItem.Publisher;
                genre = selectedItem.Genre;
                location = selectedItem.Location;
                status = selectedItem.Status;
                replaceCost = selectedItem.ReplaceCost;
                pubDate = selectedItem.PubDate;

                if (selectedItem is Audiobook ab)
                {
                    audiobookFields = true;

                    isbn = ab.Isbn;
                    author = ab.Author;
                    duration = ab.Duration;
                    narrator = ab.Narrator;

                    audiobookFields = true;
                }
                if (selectedItem is Book b)
                {
                    bookFields = true;

                    isbn = b.Isbn;
                    author = b.Author;
                    format = b.Format;

                    bookFields = true;
                }
                if (selectedItem is Cd cd)
                {
                    cdFields = true;

                    artist = cd.Artist;
                    label = cd.Label;
                    duration = cd.Duration;

                    cdFields = true;
                }
                if (selectedItem is Dvd dvd)
                {
                    dvdFields = true;

                    director = dvd.Director;
                    duration = dvd.Duration;
                    format = dvd.Format;

                    dvdFields = true;
                }
                if (selectedItem is Magazine m)
                {
                    magazineFields = true;

                    publication = m.Publication;
                    issn = m.Issn;
                    coverDate = m.CoverDate;
                }
                StateHasChanged();
            }
        }
    }

    private void ClearDisplayedFields()
    {
        itemId = 0;
        title = "";
        category = "";
        publisher = "";
        genre = "";
        location = "";
        status = "";
        replaceCost = 0;
        pubDate = DateTime.MinValue;

        isbn = "";
        author = "";
        duration = "";
        narrator = "";
        format = "";
        artist = "";
        label = "";
        director = "";
        publication = "";
        issn = "";
        duration = "";
        coverDate = DateTime.MinValue;

        audiobookFields = false;
        bookFields = false;
        cdFields = false;
        dvdFields = false;
        magazineFields = false;

        StateHasChanged();
    }
    private void ClearEditFields()
    {
        // editId = 0;
        editTitle = "";
        editCat = "";
        editPub = "";
        editGenre = "";
        editLocation = "";
        editReplaceCost = 0;
        editPubDate = DateTime.MinValue;
        // edit item child fields
        editIsbn = "";
        editAuthor = "";
        editDuration = "";
        editNarrator = "";
        editFormat = "";
        editArtist = "";
        editLabel = "";
        editDirector = "";
        editPublication = "";
        editIssn = "";
        editCoverDate = DateTime.MinValue;
        // category dropdown in edit item
        isEditItemVisible = false;
        editAudiobookFields = false;
        editBookFields = false;
        editCdFields = false;
        editDvdFields = false;
        editMagazineFields = false;

        StateHasChanged();
    }
    private void ClearAddFields()
    {
        addTitle = "";
        addCategory = "";
        addPub = "";
        addGenre = "";
        addLocation = "";
        addReplaceCost = 0;
        addPubDate = DateTime.MinValue;
        // add item child fields
        addIsbn = "";
        addAuthor = "";
        addDuration = "";
        addNarrator = "";
        addFormat = "";
        addArtist = "";
        addLabel = "";
        addDirector = "";
        addPublication = "";
        addIssn = "";
        addCoverDate = DateTime.MinValue;
        // category dropdown in add item
        isAddItemVisible = false;
        addAudiobookFields = false;
        addBookFields = false;
        addCdFields = false;
        addDvdFields = false;
        addMagazineFields = false;

        StateHasChanged();
    }

    /* ==============================================================================
     * DELETE */
    private void DeleteItem()
    {
        DBHandler db = new DBHandler();
        if (category == "Audiobook")
        {
            Audiobook ab = new Audiobook(
                itemId, title, category, publisher, genre, location, status, replaceCost, pubDate,
                    isbn, author, duration, narrator);
            AudiobookManager abm = new AudiobookManager(db);
            message = abm.DeleteItem(ab);
        }
        if (category == "Book")
        {
            Book b = new Book(
                itemId, title, category, publisher, genre, location, status, replaceCost, pubDate,
                    isbn, author, format);
            BookManager bm = new BookManager(db);
            message = bm.DeleteItem(b);
        }
        if (category == "Cd")
        {
            Cd cd = new Cd(
                itemId, title, category, publisher, genre, location, status, replaceCost, pubDate,
                    artist, label, duration);
            CdManager cdm = new CdManager(db);
            message = cdm.DeleteItem(cd);
        }
        if (category == "Dvd")
        {
            Dvd dvd = new Dvd(
                itemId, title, category, publisher, genre, location, status, replaceCost, pubDate,
                    director, duration, format);
            DvdManager dvdm = new DvdManager(db);
            message = dvdm.DeleteItem(dvd);
        }
        if (category == "Magazine")
        {
            Magazine m = new Magazine(
                itemId, title, category, publisher, genre, location, status, replaceCost, pubDate,
                    publication, issn, coverDate);
            MagazineManager mm = new MagazineManager(db);
            message = mm.DeleteItem(m);
        }
    }

    /* ==============================================================================
     * EDIT */
    private void EditItemInfo()
    {
        if (itemId > 0)
        {
            DBHandler db = new DBHandler();
            if (category.ToLower() == "audiobook")
            {
                Audiobook ab = new Audiobook(
                    itemId, editTitle, editCat, editPub, editGenre, editLocation, editStatus, editReplaceCost, editPubDate,
                        editIsbn, editAuthor, editDuration, editNarrator);
                AudiobookManager abm = new AudiobookManager(db);
                message = abm.UpdateItem(ab);
            }
            if (category.ToLower() == "book")
            {
                Book b = new Book(
                    itemId, editTitle, editCat, editPub, editGenre, editLocation, editStatus, editReplaceCost, editPubDate,
                        editIsbn, editAuthor, editFormat);
                BookManager bm = new BookManager(db);
                message = bm.UpdateItem(b);
            }
            if (category.ToLower() == "cd")
            {
                Cd cd = new Cd(
                    itemId, editTitle, editCat, editPub, editGenre, editLocation, editStatus, editReplaceCost, editPubDate,
                        editArtist, editLabel, editDuration);
                CdManager cdm = new CdManager(db);
                message = cdm.UpdateItem(cd);
            }
            if (category.ToLower() == "dvd")
            {
                Dvd dvd = new Dvd(
                    itemId, editTitle, editCat, editPub, editGenre, editLocation, editStatus, editReplaceCost, editPubDate,
                        editDirector, editDuration, editFormat);
                DvdManager dvdm = new DvdManager(db);
                message = dvdm.UpdateItem(dvd);
            }
            if (category.ToLower() == "magazine")
            {
                Magazine m = new Magazine(
                    itemId, editTitle, editCat, editPub, editGenre, editLocation, editStatus, editReplaceCost, editPubDate,
                        editPublication, editIssn, editCoverDate);
                MagazineManager mm = new MagazineManager(db);
                message = mm.UpdateItem(m);
            }
            CloseEditItemPopUp();
            alert = true;
            StateHasChanged();
        }
    }

    private void ShowEditItemPopUp()
    {
        editTitle = title;
        editCat = category;
        editPub = publisher;
        editGenre = genre;
        editLocation = location;
        editStatus = status;
        editReplaceCost = replaceCost;
        editPubDate = pubDate;

        editArtist = artist;
        editLabel = label;
        editDuration = duration;
        editAuthor = author;
        editIsbn = isbn;
        editNarrator = narrator;
        editFormat = format;
        editDirector = director;
        editIssn = issn;
        editPublication = publication;
        editCoverDate = coverDate;

        if (category.ToLower() == "audiobook")
        {
            editAudiobookFields = true;
        }
        if (category.ToLower() == "book")
        {
            editBookFields = true;
        }
        if (category.ToLower() == "cd")
        {
            editCdFields = true;
        }
        if (category.ToLower() == "dvd")
        {
            editDvdFields = true;
        }
        if (category.ToLower() == "magazine")
        {
            editMagazineFields = true;
        }
        isEditItemVisible = true;
    }
    private void CloseEditItemPopUp()
    {
        ClearEditFields();
        isEditItemVisible = false;
    }

    private void OnEditLocationChanged(ChangeEventArgs e)
    {
        editLocation = e.Value?.ToString();
    }
    private void OnEditFormatChanged(ChangeEventArgs e)
    {
        editFormat = e.Value?.ToString();
    }
    private void OnEditStatusChanged(ChangeEventArgs e)
    {
        editStatus = e.Value?.ToString();
    }

/* ==============================================================================
 * ADD */
    private void AddItem()
    {
        DBHandler db = new DBHandler();
        if (addAudiobookFields)
        {
            AudiobookManager m = new AudiobookManager(db);
            message = m.AddItem(0, addTitle, addCategory, addPub, addGenre, addLocation, "available", addReplaceCost, addPubDate,
            addIsbn, addAuthor, addDuration, addNarrator);
        }
        else if (addBookFields)
        {
            BookManager m = new BookManager(db);
            message = m.AddItem(0, addTitle, addCategory, addPub, addGenre, addLocation, "available", addReplaceCost, addPubDate,
            addIsbn, addAuthor, addFormat);
        }
        else if (addCdFields)
        {
            CdManager m = new CdManager(db);
            message = m.AddItem(0, addTitle, addCategory, addPub, addGenre, addLocation, "available", addReplaceCost, addPubDate,
            addArtist, addLabel, addDuration);
        }
        else if (addBookFields)
        {
            DvdManager m = new DvdManager(db);
            message = m.AddItem(0, addTitle, addCategory, addPub, addGenre, addLocation, "available", addReplaceCost, addPubDate,
            addDirector, addDuration, addFormat);
        }
        else if (addBookFields)
        {
            MagazineManager m = new MagazineManager(db);
            message = m.AddItem(0, addTitle, addCategory, addPub, addGenre, addLocation, "available", addReplaceCost, addPubDate,
            addPublication, addIssn, addCoverDate);
        }
        CloseAddItemPopUp();
        alert = true;
    }

    private void ShowAddItemPopUp()
    {
        isAddItemVisible = true; 
    }

    private void CloseAddItemPopUp()
    {
        ClearAddFields();
        isAddItemVisible = false; 
    }
    private void ChangeAddItemCategory()
    {
        addAudiobookFields = false;
        addBookFields = false;
        addCdFields = false;
        addDvdFields = false;
        addMagazineFields = false;
        switch(addCategory)
        {
            case "Audiobook":
                addAudiobookFields = true;
                break;
            case "Book":
                addBookFields = true;
                break;
            case "Cd":
                addCdFields = true;
                break;
            case "Dvd":
                addDvdFields = true;
                break;
            case "Magazine":
                addMagazineFields = true;
                break;
        }
    }

    private void OnAddLocationChanged(ChangeEventArgs e)
    {
        addLocation = e.Value?.ToString();
    }
    private void OnAddFormatChanged(ChangeEventArgs e)
    {
        addFormat = e.Value?.ToString();
    }
    private void OnAddCategoryChanged(ChangeEventArgs e)
    {
        addCategory = e.Value?.ToString();
        ChangeAddItemCategory();
    }

/* ==============================================================================
 * ALERTS */
    private void ShowAlertBox()
    {
        alert = true;
    }
    private void CloseAlertBox()
    {
        alert = false;
    }
}

