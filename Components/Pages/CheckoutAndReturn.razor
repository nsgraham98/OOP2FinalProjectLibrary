@page "/checkoutandreturn"
@using OOP2FinalProjectLibrary
@using OOP2FinalProjectLibrary.Data
@using OOP2FinalProjectLibrary.Data.Objects
@using OOP2FinalProjectLibrary.Data.Objects.Items
@inject NavigationManager navigationManager


<style>
    .maincontent
    {
        margin:0;
        display: flex;
        flex-wrap:wrap;
    }
    .maincontent > div
    {
        flex-grow:1;
    }
    .maincontent > div:nth-child(3)
    {
/*         background-color:lightblue; */
        width:100%;

    }
    .maincontent > div:nth-child(2)
    {
        text-align:right;
        position:relative;
        margin-right:0;
/*         background-color:lightcoral; */
    }
    .maincontent > div:nth-child(1)
    {
/*         background-color:lightyellow; */
    }
    .maincontent div:nth-child(2) > input
    {
        margin-right:0;
        margin:auto;
    }
   
    h3
    {
        text-align:center;
    }

    .reserve
    {
        display: flex;
        flex-direction: row;
        justify-content:flex-start;
        align-items: flex-start;
    }
    .reserve > form > button
    {
        display:block;
        margin:auto;
        margin-left:53%;
        margin-top:1em;
        background-color:royalblue;
        color:white;
        border-radius:5px;
    }
    .reserve > form > input
    {
        border-radius:5px;
        width:300px;
    }
    .selectionbutton
    {
        margin-bottom:20px;
    }

    .selectionstring 
    {
        border-top: solid black 2px;
        padding-top:18px;
    }


</style>
<div class="maincontent">
        <div class="title">
            <h3>Checkout & Returns</h3><br/>
            <p>Searchby Title Check-out <br />Enter Serial Number to Return</p>
        </div>

        <div class="bookForm">
            <form>
            <h3>Search by Category</h3>

            <label for="title">Title:</label>
            <input type="text" name="title" @bind="@title" /><br />

            <button type="button">Search</button><br />

        </form>

        @foreach (Item item in ItemList)
        {
            @if(item.Status == "available") // change to match the strings used for availability
            {
                <div class="itemData" style="background-color:@(IsChecked ? "green" :"yellow")">
                    <p>
                        <strong>Title:</strong> @item.Title <br />
                        @if (item is Book book)
                        {
                            <h4>Book</h4> <br />
                            <strong>Author:</strong> @book.Author <br />
                        }    
                    
                        @if(item is Cd cd)
                        {
                            <h4>CD</h4> <br />
                            <strong>Artist:</strong> @cd.Artist <br />
                        }

                        @if(item is Magazine magazine)
                        {
                            <h4>Magazine</h4> <br />
                            <strong>Publication:</strong> @magazine.Publication <br />
                            <strong>Cover Date:</strong> @magazine.CoverDate<br />
                        }

                        @if(item is Dvd dvd)
                        {
                            <h4>DVD</h4> <br />
                            <strong>Format:</strong> @dvd.Format <br />
                            <strong>Duration:</strong> @dvd.Duration <br />
                        }

                        @if (item is Audiobook audiobook)
                        {
                            <h4>AudioBook</h4>
                            <strong>Narrator:</strong> @audiobook.Narrator<br />
                            <strong>Duration:</strong> @audiobook.Duration<br />
                        }

                        <strong>Genre:</strong> @item.Genre <br />
                        <strong>Location:</strong> @item.Location <br />
                        <strong>Status:</strong> @item.Status <br />

                        @* <input type="checkbox" @bind="item.IsChecked" /> *@
                    </p>
            }
            </div>
        }
        }
        

@*          <div class="bookData" style="background-color:@(IsChecked ? "grey" : "white")">
            <p>
                <strong>Title:</strong> @item.Title <br />
                <strong>Author:</strong> @item. <br /> 
                 <strong>Category:</strong> @book.Category<br /> 
                 <strong>Serial Number:</strong> @book.SerialNum <br /> 
                 <strong>Copies Available:</strong> @item.Status<br />
                <input type="checkbox" @bind="IsChecked" />
            </p> 
        </div>  *@
        
    </div>
        
</div>



@code {

    // private string reservationMessage { get; set; } = "";
    public string title { get; set; }
    private bool _isChecked;
    public bool IsChecked;

    public List<Item> ItemList { get; set; } = new List<Item>();

    public Item item = new Item();

    private void SearchItems()
    {
        // search for item via title
        ItemList = ItemList.Where(item => item.Title.Contains(title, StringComparison.OrdinalIgnoreCase)).ToList();
    }

    private bool CanSearch()
    {
        return ItemList.Any(item => item.Status == "available"); // Only search if item is available
    }

    // add line that either changes the button to unclickable quanitity ==0 or just skip populating altogether
}